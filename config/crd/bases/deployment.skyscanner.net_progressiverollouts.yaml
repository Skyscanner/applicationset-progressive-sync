
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: progressiverollouts.deployment.skyscanner.net
spec:
  group: deployment.skyscanner.net
  names:
    kind: ProgressiveRollout
    listKind: ProgressiveRolloutList
    plural: progressiverollouts
    singular: progressiverollout
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ProgressiveRollout is the Schema for the progressiverollouts API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ProgressiveRolloutSpec defines the desired state of ProgressiveRollout
          properties:
            sourceRef:
              description: SourceRef references the resource, example an ApplicationSet,
                which owns ArgoCD Applications
              properties:
                apiGroup:
                  description: APIGroup is the group for the resource being referenced.
                    If APIGroup is not specified, the specified Kind must be in the
                    core API group. For any other third-party types, APIGroup is required.
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
              required:
              - kind
              - name
              type: object
            stages:
              description: Stages reference a list of Progressive Rollout stages
              items:
                description: ProgressiveRolloutStage defines a rollout stage
                properties:
                  maxParallel:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxParallel is how many selected targets to update
                      in parallel
                    x-kubernetes-int-or-string: true
                  maxTargets:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MaxTargets is the maximum number of selected targets
                      to update
                    x-kubernetes-int-or-string: true
                  name:
                    description: Name is a human friendly name for the stage
                    type: string
                  targets:
                    description: Targets is the targets to update in the stage
                    properties:
                      clusters:
                        description: Clusters is the a cluster type of targets
                        properties:
                          selector:
                            description: Selector is a label selector to get the clusters
                              for the update
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        required:
                        - selector
                        type: object
                    type: object
                required:
                - maxParallel
                - maxTargets
                - name
                type: object
              type: array
          required:
          - sourceRef
          type: object
        status:
          description: ProgressiveRolloutStatus defines the observed state of ProgressiveRollout
          properties:
            conditions:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              items:
                description: ProgressiveRolloutCondition defines a ProgressiveRollout
                  condition
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime of this condition
                    format: date-time
                    type: string
                  reason:
                    description: Reason is a one-word CamelCase reason for the condition's
                      last transition
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown
                    type: string
                  type:
                    description: Type of Progressive Rollout condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
